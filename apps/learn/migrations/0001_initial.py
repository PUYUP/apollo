# Generated by Django 3.0.7 on 2020-06-07 00:50

import apps.learn.models.log
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import utils.files
import utils.validators
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('date_updated', models.DateTimeField(auto_now=True, null=True)),
                ('label', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, max_length=500)),
                ('princing_type', models.CharField(choices=[('paid', 'Paid'), ('free', 'Free')], default='paid', max_length=255, validators=[django.core.validators.RegexValidator(message='Can only contain the letters a-z and underscores.', regex='^[a-zA-Z_][a-zA-Z_]*$'), utils.validators.non_python_keyword])),
                ('is_delete', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Chapter',
                'verbose_name_plural': 'Chapters',
                'db_table': 'learn_chapter',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('date_updated', models.DateTimeField(auto_now=True, null=True)),
                ('label', models.CharField(help_text='Course name.', max_length=255)),
                ('excerpt', models.TextField(help_text='Short description.', max_length=500)),
                ('description', models.TextField(help_text='Tell more details.')),
                ('learned', models.TextField(help_text="What's learner got.")),
                ('requirement', models.TextField(help_text="What's learner must prepare.")),
                ('signer_status', models.SlugField(choices=[('idle', 'Idle'), ('review', 'Review'), ('reject', 'Reject'), ('accept', 'Accept')], default='idle', max_length=255, validators=[django.core.validators.RegexValidator(message='Can only contain the letters a-z and underscores.', regex='^[a-zA-Z_][a-zA-Z_]*$'), utils.validators.non_python_keyword])),
                ('public_status', models.SlugField(choices=[('draft', 'Draft'), ('publish', 'Publish')], default='draft', max_length=255, validators=[django.core.validators.RegexValidator(message='Can only contain the letters a-z and underscores.', regex='^[a-zA-Z_][a-zA-Z_]*$'), utils.validators.non_python_keyword])),
                ('access_type', models.CharField(choices=[('public', 'Public'), ('private', 'Private')], default='public', max_length=255, validators=[django.core.validators.RegexValidator(message='Can only contain the letters a-z and underscores.', regex='^[a-zA-Z_][a-zA-Z_]*$'), utils.validators.non_python_keyword])),
                ('language', models.CharField(choices=[('id-ID', 'Indonesian (Indonesia)'), ('en-GB', 'English (United Kingdom)')], default='id-ID', max_length=255, validators=[django.core.validators.RegexValidator(message='Can only contain the letters a-z and underscores.', regex='^[a-zA-Z_][a-zA-Z_]*$'), utils.validators.non_python_keyword])),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('is_delete', models.BooleanField(default=False)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses', related_query_name='course', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Course',
                'verbose_name_plural': 'Courses',
                'db_table': 'learn_course',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Lecture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('date_updated', models.DateTimeField(auto_now=True, null=True)),
                ('label', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, max_length=500)),
                ('material_type', models.CharField(choices=[('article', 'Article'), ('video', 'Video'), ('document', 'Document')], default='article', max_length=255, validators=[django.core.validators.RegexValidator(message='Can only contain the letters a-z and underscores.', regex='^[a-zA-Z_][a-zA-Z_]*$'), utils.validators.non_python_keyword])),
                ('is_delete', models.BooleanField(default=False)),
                ('chapter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lectures', related_query_name='lecture', to='learn.Chapter')),
                ('course', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='lectures', related_query_name='lecture', to='learn.Course')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lectures', related_query_name='lecture', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Lecture',
                'verbose_name_plural': 'Lectures',
                'db_table': 'learn_lecture',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('label', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('sort_order', models.IntegerField(default=1)),
                ('icon', models.ImageField(blank=True, max_length=500, upload_to='images/icon')),
                ('is_active', models.BooleanField(default=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subject_parents', related_query_name='subject_parent', to='learn.Subject')),
            ],
            options={
                'verbose_name': 'Subject',
                'verbose_name_plural': 'subjects',
                'db_table': 'learn_subject',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Snippet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('date_updated', models.DateTimeField(auto_now=True, null=True)),
                ('label', models.CharField(help_text='Name with extension: django.py', max_length=255)),
                ('description', models.TextField(blank=True, max_length=500)),
                ('code', models.TextField(help_text='Line of sample code')),
                ('access_type', models.CharField(choices=[('public', 'Public'), ('private', 'Private')], default='public', max_length=255, validators=[django.core.validators.RegexValidator(message='Can only contain the letters a-z and underscores.', regex='^[a-zA-Z_][a-zA-Z_]*$'), utils.validators.non_python_keyword])),
                ('is_delete', models.BooleanField(default=False)),
                ('object_id', models.PositiveIntegerField(blank=True)),
                ('content_type', models.ForeignKey(blank=True, limit_choices_to=models.Q(app_label='learn'), null=True, on_delete=django.db.models.deletion.CASCADE, related_name='snippets', related_query_name='snippet', to='contenttypes.ContentType')),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='snippets', related_query_name='snippet', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Snippet',
                'verbose_name_plural': 'Snippets',
                'db_table': 'learn_snippet',
                'ordering': ['-date_updated'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('date_updated', models.DateTimeField(auto_now=True, null=True)),
                ('value_article', models.TextField(blank=True)),
                ('value_file', models.FileField(blank=True, max_length=500, upload_to=utils.files.material_upload_path)),
                ('is_delete', models.BooleanField(default=False)),
                ('chapter', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='materials', related_query_name='material', to='learn.Chapter')),
                ('course', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='materials', related_query_name='material', to='learn.Course')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='materials', related_query_name='material', to=settings.AUTH_USER_MODEL)),
                ('lecture', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='materials', related_query_name='material', to='learn.Lecture')),
                ('subject', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='materials', related_query_name='material', to='learn.Subject')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Material',
                'verbose_name_plural': 'Materials',
                'db_table': 'learn_material',
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='lecture',
            name='subject',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lectures', related_query_name='lecture', to='learn.Subject'),
        ),
        migrations.AddField(
            model_name='lecture',
            name='updated_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Instructor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('date_updated', models.DateTimeField(auto_now=True, null=True)),
                ('is_creator', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instructors', related_query_name='instructor', to='learn.Course')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='instructors', related_query_name='instructor', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Instructors',
                'verbose_name_plural': 'Instructor',
                'db_table': 'learn_instructor',
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='course',
            name='subject',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='courses', related_query_name='course', to='learn.Subject'),
        ),
        migrations.AddField(
            model_name='course',
            name='updated_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='chapter',
            name='course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chapters', related_query_name='chapter', to='learn.Course'),
        ),
        migrations.AddField(
            model_name='chapter',
            name='creator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chapters', related_query_name='chapter', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='chapter',
            name='subject',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='chapters', related_query_name='chapter', to='learn.Subject'),
        ),
        migrations.AddField(
            model_name='chapter',
            name='updated_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('value_image', models.ImageField(blank=True, max_length=500, upload_to=utils.files.directory_image_path)),
                ('value_file', models.FileField(blank=True, max_length=500, upload_to=utils.files.directory_file_path)),
                ('identifier', models.CharField(blank=True, max_length=255, validators=[django.core.validators.RegexValidator(message='Can only contain the letters a-z and underscores.', regex='^[a-zA-Z_][a-zA-Z_]*$'), utils.validators.non_python_keyword])),
                ('caption', models.TextField(blank=True, max_length=500)),
                ('access_type', models.CharField(choices=[('public', 'Public'), ('private', 'Private')], default='public', max_length=255, validators=[django.core.validators.RegexValidator(message='Can only contain the letters a-z and underscores.', regex='^[a-zA-Z_][a-zA-Z_]*$'), utils.validators.non_python_keyword])),
                ('is_delete', models.BooleanField(default=False)),
                ('object_id', models.PositiveIntegerField(blank=True)),
                ('content_type', models.ForeignKey(blank=True, limit_choices_to=models.Q(app_label='learn'), on_delete=django.db.models.deletion.CASCADE, related_name='attachments', related_query_name='attachment', to='contenttypes.ContentType')),
                ('uploader', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='attachments', related_query_name='attachment', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Attachment',
                'verbose_name_plural': 'Attachments',
                'db_table': 'learn_attachment',
                'ordering': ['-date_updated'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ActivityLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='action time')),
                ('object_id', models.TextField(blank=True, null=True, verbose_name='object id')),
                ('object_repr', models.CharField(max_length=200, verbose_name='object repr')),
                ('action_flag', models.PositiveSmallIntegerField(choices=[(1, 'Addition'), (2, 'Change'), (3, 'Deletion')], verbose_name='action flag')),
                ('change_message', models.TextField(blank=True, verbose_name='change message')),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='contenttypes.ContentType', verbose_name='content type')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'Log Entry',
                'verbose_name_plural': 'Log Entries',
                'db_table': 'learn_log',
                'ordering': ['-action_time'],
                'abstract': False,
            },
            managers=[
                ('objects', apps.learn.models.log.ActivityLogManager()),
            ],
        ),
    ]
